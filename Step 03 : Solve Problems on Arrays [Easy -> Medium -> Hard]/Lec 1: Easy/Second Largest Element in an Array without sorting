//link:-https://www.geeksforgeeks.org/problems/second-largest3735/1?page=1&sprint=bb436fe6ca33efc91d996a51a723a90a&sortBy=submissions

class Solution {
    /**
     * Function to find the second largest element in the array.
     *
     * @param arr Input array of positive integers
     * @return Second largest element, or -1 if it doesn't exist
     *
     * Approach:
     * ---------
     * 1. Maintain two variables:
     *    - `largest` = stores the largest element so far.
     *    - `secondLargest` = stores the second largest element so far.
     *
     * 2. Traverse the array:
     *    - If current element > largest:
     *        → Update secondLargest = largest
     *        → Update largest = current element
     *    - Else if current element < largest AND current element > secondLargest:
     *        → Update secondLargest = current element
     *
     * 3. At the end, check:
     *    - If secondLargest is still -1 → return -1 (no valid second largest).
     *
     * Time Complexity: O(n) → single pass
     * Space Complexity: O(1) → only two extra variables
     */
    public int getSecondLargest(int[] arr) {
        int n = arr.length;

        int largest = -1;        // stores largest element
        int secondLargest = -1;  // stores second largest element

        for (int i = 0; i < n; i++) {
            if (arr[i] > largest) {
                // Update both when a new largest is found
                secondLargest = largest;
                largest = arr[i];
            } else if (arr[i] < largest && arr[i] > secondLargest) {
                // Update only secondLargest if it's less than largest
                secondLargest = arr[i];
            }
        }

        return secondLargest; // will be -1 if no valid second largest found
    }
}
